FROM php:8.2-fpm

WORKDIR /var/www/html

# Install system dependencies required to build PHP extensions
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    git \
    curl \
    ca-certificates \
    build-essential \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip \
    zlib1g-dev \
    libsqlite3-dev \
    supervisor \
    && rm -rf /var/lib/apt/lists/*

# Configure GD with jpeg and freetype support then install PHP extensions
RUN docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) \
    pdo_mysql \
    pdo_sqlite \
    mbstring \
    exif \
    pcntl \
    bcmath \
    gd \
    zip

# Install Composer from official image
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

# Copy application files
COPY . .

# Install PHP dependencies (production) - optimize autoloader
RUN composer install --no-interaction --optimize-autoloader --no-dev --prefer-dist

# Cache config, routes and views (optional)
RUN php artisan config:cache && php artisan route:cache && php artisan view:cache || true

# Ensure proper permissions
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html/storage /var/www/html/bootstrap/cache

# Create SQLite DB file if required
RUN touch database/database.sqlite && chmod 666 database/database.sqlite || true

# NOTE: Running migrations at build time can fail in some CI/CD setups.
# You can run migrations after containers are up:
# docker-compose exec app php artisan migrate --force
RUN php artisan migrate --force --no-interaction || true

EXPOSE 9000

# Simple health check using PHP CLI
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD php -r "echo 'OK';"

CMD ["php-fpm"]
